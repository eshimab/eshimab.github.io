#
#
#
#
#
#
# Serve MkDocs
#
# Move to the python3 virtual env bin directory to activate the venv
cd ~/scidev
source envsdir/mdocs/bin/activate # activate the python3 venv using command `source`
# Now we are in the python venv. The input will look like:
# (mdocs) dhcp-168-105-223-225:notesite eshim$
cd ~/scidev/notesite # move to the mkdocs root directory
mkdocs serve
#
# Build MkDocs
#
# Move to the python3 virtual env bin directory to activate the venv
cd ~/scidev
source envsdir/mdocs/bin/activate # activate the python3 venv using command `source`
# Now we are in the python venv. The input will look like:
# (mdocs) dhcp-168-105-223-225:notesite eshim$
cd ~/scidev/notesite # move to the mkdocs root directory
mkdocs build # build the site with MkDocs
# Move the mkdocs site to the scidev/docs so that GitHub Pages can find it
rsync --archive --progress --recursive --verbose --delete-after ~/scidev/notesite/site/* ~/scidev/docs
# Delete the generated site directory
rm -vR ~/scidev/notesite/site
# Exit the virtual machine
deactivate

# Set Commit Message Variable
commit_message="Updates to mkupdate.sh and workflow"
# Add / Commit / Push got Git
cd ~/scidev # Move to root dir of the local Git branch
git status
git remote --verbose # View the Remote Repository URL Aliases
# Add Changes ie Stage Commits on local machine
git add docs # this is the HTML site generated by mkdocs
git add notesite # Because we updated the md files here
git status
# Create a Commit on local machine branch
git commit -m {$commit_message}
# Push Changes from the local branch main and merge them with the repository alias scimain
git push scimain main

